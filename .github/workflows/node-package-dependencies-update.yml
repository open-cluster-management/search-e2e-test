name: Update node package dependencies versions

# Set jobs to be configured and executed by schedule.
on:
  push:
    branches:
      - 'main'
      - 'release-2.3'
      - 'release-2.4'
  schedule:
    - cron: '0 6 * * 1-5' # Actions will be executed at 6am for every weekday.

# Set environment variables.
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup node for repository code
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Node version should be 14.
          check-latest: true

      - name: Validate installed node version
        run: |
          echo "Using node version: $(node --version)"
          echo "Using npm version: $(npm -v)"

      - name: Create log entry for github action results
        run: |
          mkdir -p .github/logs
          echo -e "### Generated logs from GitHub Action: [${{ github.run_id }}](https://github.com/stolostron/search-e2e-test/actions/runs/${{ github.run_id }})" >> .github/logs/update-log-$(date +%m-%d-%y).md

      - name: Add updated log report to README # Once the PR has been merged, the link will be active and available for view.
        run: |
          echo -e "\nGenerated auto rebuild. View log file created: [update-log-$(date +%m-%d-%y)](https://github.com/stolostron/search-e2e-test/blob/main/.github/logs/update-log-$(date +%m-%d-%y).md)" >> README.md

      - name: Install node modules package dependencies
        id: install
        run: |
          npm install

      - name: Verify outdated node modules package dependencies versions
        id: outdated
        continue-on-error: true # Continuing on error. The initial command will return an exit 1 code; however, this is okay.
        run: |
          echo "Preparing to list outdated node modules versions within current build"
          npm outdated

      - name: Update node modules package dependencies versions within package.json
        id: updated
        run: |
          echo "Preparing to update all outdated package modules to latest versions"
          echo "Ignoring package update for cypress"
          npx npm-check-updates -u -x cypress | tee -a .github/logs/update-log-$(date +%m-%d-%y).md

      - name: Installing updated node modules package dependencies within the project
        id: reinstall
        run: |
          echo "Preparing to install the updated package dependencies"
          npm install

      - name: Checking for unused packages dependencies listed within package.json
        continue-on-error: true
        id: unused
        run: |
          echo "Preparing to check for unused packages dependencies within the project"
          npx depcheck

      - name: Verify node package dependencies updated to latest versions (failure)
        id: verify-failure
        if: steps.reinstall.outcome == 'failure'
        run: |
          echo -e "\n#### Failed to update the outdated node package dependencies successfully. Manual update and install needed.\n---" >> .github/logs/update-log-$(date +%m-%d-%y).md

      - name: Verify node modules dependencies updated to latest versions (succecss)
        id: verify-success
        if: steps.reinstall.outcome == 'success'
        run: |
          echo -e "\n#### Successfully updated the node modules dependencies.\n---" >> .github/logs/update-log-$(date +%m-%d-%y).md

      - name: Verify modules with security vulnerabilities
        id: audit
        continue-on-error: true # Continuing on error. The initial command will return an exit 1 code; however, this is okay.
        run: |
          npm audit

      - name: Resolve node modules security vulnerabilities
        id: audit-fix
        continue-on-error: true # Continuing on error. This step is to avoid vulnerabilities; however, we incase it fails we will need to resolve them manually.
        run: |
          echo "Preparing to address security vulnerabilities in the updated package dependencies."
          npm audit fix

      - name: Execute code linting # Executing this step incase the file format needs to be fixed.
        id: linting
        run: |
          npm run lint:fix
          git status

      - name: Create pull request for updated node modules versions
        if: steps.outdated.outcome == 'failure'
        uses: peter-evans/create-pull-request@v3
        with:
          add-paths: .
          body: |
            This PR is auto-generated by the Git action [node-package-dependencies-update](https://github.com/stolostron/search-e2e-test/blob/main/.github/workflows/node-package-dependencies-update.yml).
          branch-suffix: short-commit-hash
          commit-message: 'Updated node module versions within the project'
          delete-branch: true
          labels: automated-pr
          reviewers: dislbenn
          signoff: true
          title: '[Automated PR] Updated node modules versions within the project'
          token: ${{ secrets.GITHUB_TOKEN }}
